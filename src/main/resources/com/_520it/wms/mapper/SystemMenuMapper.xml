<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wms.mapper.SystemMenuMapper">
    <resultMap id="BaseResultMap" type="com._520it.wms.domain.SystemMenu">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="url" property="url"/>
        <result column="sn" property="sn"/>
        <association property="parent" javaType="SystemMenu" column="parent_id"
                     select="com._520it.wms.mapper.SystemMenuMapper.selectByPrimaryKey"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
    delete from `systemmenu`
    where id = #{id}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into `systemmenu` (name, url, sn, parent_id)
    values (#{name}, #{url}, #{sn}, #{parent.id})
  </insert>
    <update id="updateByPrimaryKey">
    update `systemmenu`
    set name = #{name},
      url = #{url},
      sn = #{sn},
      parent_id = #{parent.id}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, name, url, sn, parent_id
    from `systemmenu`
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, url, sn, parent_id
    from `systemmenu`
    where parent_id IS NOT NULL
  </select>
    <select id="query" resultMap="BaseResultMap">
    select id, name text, url
    from `systemmenu`
    where parent_id IS NOT NULL
  </select>
    <sql id="base_where">
        <where>
            <choose>
                <when test="parentId==null">
                AND parent_id is null
            </when>
                <otherwise>
                    AND parent_id=#{parentId}
                </otherwise>
            </choose>
        </where>
    </sql>
    <select id="queryForList" resultMap="BaseResultMap">
        select id, name, url, sn, parent_id
        from `systemmenu`
        <include refid="base_where"/>
        limit #{start},#{pageSize}
    </select>
    <select id="queryForEasy" resultMap="BaseResultMap">
        select id, name, url, sn, parent_id
        from `systemmenu`
        <include refid="base_where"/>
        limit #{start},#{pageSize}
    </select>
    <select id="queryForCount" resultType="int">
        SELECT count(id) FROM systemmenu
        <include refid="base_where"/>
    </select>
    <select id="selectAllByRoleId" resultType="SystemMenu">
     SELECT sm.id,sm.name,sm.sn,sm.url
     FROM systemmenu sm JOIN role_menu rm on sm.id=rm.menu_id
     where rm.role_id=#{roleId}

  </select>
    <select id="queryMenusByParentSn" resultType="map">
       SELECT child.id as id,child.name as name,child.url as action,child.parent_id as pId
       FROM systemmenu child LEFT JOIN systemmenu parent on child.parent_id=parent.id
       WHERE parent.sn=#{parentSn}
    </select>
    <select id="queryMenusByParentSnAndEmpoyeeId" resultType="java.util.Map">
        SELECT child.id as id,child.name as name,child.url as action,child.parent_id as pId
        FROM systemmenu child LEFT JOIN systemmenu parent on child.parent_id=parent.id
        JOIN role_menu rm on child.id=rm.menu_id
        JOIN employee_role er on rm.role_id=er.role_id
        WHERE parent.sn=#{parentSn} and er.employee_id=#{currentId}
    </select>

</mapper>